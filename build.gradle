buildscript {

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.13.RELEASE")
        classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:2.0.0"
    }
}

plugins {
    id "org.sonarqube" version "2.8"
    id 'jacoco'
}

buildScan {
    termsOfServiceUrl = 'https://gradle.com/terms-of-service'
    termsOfServiceAgree = 'yes'
    // publishAlways()
}

ext.versions = [
        springBootVersion        : '2.1.13.RELEASE',
        springCloudVersion       : '2.1.5.RELEASE',
        springTxVersion          : '5.1.14.RELEASE',
        springFoxVersion         : '2.9.2',
        hibernateVaildatorVersion: '6.1.2.Final',
        jaxbVersion              : '2.3.1',
        javaxMailVersion         : '1.6.2'
]

ext.libraries = [
        spring_boot_starter                     : dependencies.create("org.springframework.boot:spring-boot-starter:" + ext.versions.springBootVersion) {
            exclude module: "spring-boot-starter-logging"
            force = true
        },
        spring_boot_starter_log4j2              : dependencies.create("org.springframework.boot:spring-boot-starter-log4j2:" + ext.versions.springBootVersion),
        spring_boot_starter_web                 : dependencies.create("org.springframework.boot:spring-boot-starter-web:" + ext.versions.springBootVersion) {
            exclude module: "spring-boot-starter-logging"
            force = true
        },
        spring_boot_starter_data_jpa            : dependencies.create("org.springframework.boot:spring-boot-starter-data-jpa:" + ext.versions.springBootVersion) {
            exclude module: "spring-boot-starter-logging"
            force = true
        },
        spring_boot_starter_data_rest           : dependencies.create("org.sp